## marks
Toggle mark 'x' and display it in the leftmost column | m
Remove mark 'x' where x is a-zA-Z | d
Go to mark 'x' | 'x

Place the next available mark | m,
If no mark on line, place the next available mark. Otherwise, remove (fir) existing mark. | m.
Delete all marks from the current line | m-
Delete all marks from the current buffer | m<Space>
Jump to next mark | ]`
Jump to prev mark | [`
Jump to start of next line containing a mark | ]'
Jump to start of prev line containing a mark | ['
Jump by alphabetical order to next mark | `]
Jump by alphabetical order to prev mark | `[
Jump by alphabetical order to start of next line having a mark | ']
Jump by alphabetical order to start of prev line having a mark | '[
Open location list and display marks from current buffer | m/
Toggle the corresponding marker !@#$%^&*() | m[0-9]
Remove all markers of the same type | m<S-[0-9]>
Jump to next line having a marker of the same type | ]-
Jump to prev line having a marker of the same type | [-
Jump to next line having a marker of any type | ]=
Jump to prev line having a marker of any type | [=
Open location list and display markers from current buffer | m?
Remove all markers | m<BS>


## private
Select everything inside a bracket | yi)
Append to macro                    | q(uppercase)
